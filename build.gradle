plugins {
	id 'java'
	id 'idea'
	id 'jacoco'
	id 'checkstyle'
	id 'org.springframework.boot'               version libs.versions.spring
	id 'io.spring.dependency-management'        version libs.versions.springDependencyManagement
}

group = 'com.example.assignment'
version = '1.0'
description = 'Spring Master Slave'

java {
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

[compileJava, compileTestJava]*.options.collect {options -> options.encoding = 'UTF-8'}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenLocal()
	mavenCentral()
	maven {
		url = uri('https://repo.maven.apache.org/maven2/')
	}
}

dependencies {
	compileOnly 							libs.lombok
	annotationProcessor 					libs.lombok
	implementation 							libs.springbootStarterWeb
	implementation							libs.springbootStarterActuator
	implementation							libs.spingbootDataJpa
	implementation							libs.feign
	implementation							libs.flyway
	implementation							libs.mapstruct
	annotationProcessor						libs.mapstructProcessor
	runtimeOnly								libs.h2db
	testImplementation 						libs.springbootStarterTest

	implementation							'org.springframework.cloud:spring-cloud-starter-openfeign'
}

ext {
	set('springCloudVersion', '2023.0.0')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

jacocoTestReport {
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoTestReport')
	}
}

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		events('passed', 'failed', 'skipped')
	}
}

test.finalizedBy jacocoTestReport

checkstyle {
	configFile = file("${rootDir}/codequality/checkstyle.xml")
	toolVersion = '10.12.3'
	checkstyleTest.enabled = false
}

tasks.register('checkstyle', Checkstyle) {
	checkstyleMain.source = "src/main/java"
	ignoreFailures = true
	showViolations = true
	reports {
		xml.enabled false
		html.enabled true
	}
}